{"ast":null,"code":"import _classCallCheck from \"/Users/admin/Desktop/code/clicky-game/clicky-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/admin/Desktop/code/clicky-game/clicky-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/admin/Desktop/code/clicky-game/clicky-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/admin/Desktop/code/clicky-game/clicky-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/admin/Desktop/code/clicky-game/clicky-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/admin/Desktop/code/clicky-game/clicky-app/src/App.js\";\nimport React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport Navbar from \"./components/Navbar\";\nimport friends from \"./friends.json\";\nimport \"./index.css\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      friends: friends,\n      message: \"Click an image to begin!\",\n      score: 0,\n      highscore: 0,\n      unselectedFriends: friends\n    };\n\n    _this.shuffleArray = function (array) {\n      for (var i = array.length - 1; i > 0; i--) {\n        var j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j] = [array]];\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    //Below needs to be the click function that records click\n    value: function componentDidMount() {}\n  }, {\n    key: \"render\",\n    // Map over this.state.friends and render a FriendCard component for each friend object\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Wrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        message: this.state.message,\n        score: this.state.score,\n        highscore: this.state.highscore,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), React.createElement(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), this.state.friends.map(function (friend) {\n        return React.createElement(FriendCard, {\n          clickCount: _this2.clickCount,\n          id: friend.id,\n          key: friend.id,\n          image: friend.image // location={friend.location}\n          ,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        });\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/admin/Desktop/code/clicky-game/clicky-app/src/App.js"],"names":["React","Component","FriendCard","Wrapper","Title","Navbar","friends","App","state","message","score","highscore","unselectedFriends","shuffleArray","array","i","length","j","Math","floor","random","map","friend","clickCount","id","image"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAO,aAAP;;IAEMC,G;;;;;;;;;;;;;;;;;UAEJC,K,GAAQ;AACNF,MAAAA,OAAO,EAAPA,OADM;AAENG,MAAAA,OAAO,EAAE,0BAFH;AAGNC,MAAAA,KAAK,EAAE,CAHD;AAINC,MAAAA,SAAS,EAAE,CAJL;AAKNC,MAAAA,iBAAiB,EAAEN;AALb,K;;UAcTO,Y,GAAe,UAAAC,KAAK,EAAI;AACtB,WAAK,IAAIC,CAAC,GAAGD,KAAK,CAACE,MAAN,GAAc,CAA3B,EAA8BD,CAAC,GAAG,CAAlC,EAAoCA,CAAC,EAArC,EAAyC;AACvC,YAAIE,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBL,CAAC,GAAG,CAArB,CAAX,CAAR;AACA,SAACD,KAAK,CAACC,CAAD,CAAN,EAAWD,KAAK,CAACG,CAAD,CAAL,GAAW,CAACH,KAAD,CAAtB;AACD;AACF,K;;;;;;;AAVA;wCACkB,CAElB;;;AAWA;6BACS;AAAA;;AACP,aACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACE,QAAA,OAAO,EAAE,KAAKN,KAAL,CAAWC,OADtB;AAEE,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWE,KAFpB;AAGE,QAAA,SAAS,EAAE,KAAKF,KAAL,CAAWG,SAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAME,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,EAOG,KAAKH,KAAL,CAAWF,OAAX,CAAmBe,GAAnB,CAAuB,UAAAC,MAAM;AAAA,eAC5B,oBAAC,UAAD;AACE,UAAA,UAAU,EAAE,MAAI,CAACC,UADnB;AAEE,UAAA,EAAE,EAAED,MAAM,CAACE,EAFb;AAGE,UAAA,GAAG,EAAEF,MAAM,CAACE,EAHd;AAIE,UAAA,KAAK,EAAEF,MAAM,CAACG,KAJhB,CAKA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAD4B;AAAA,OAA7B,CAPH,CADF;AAmBD;;;;EA9CexB,S;;AAiDlB,eAAeM,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport Navbar from \"./components/Navbar\";\nimport friends from \"./friends.json\";\nimport \"./index.css\";\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends,\n    message: \"Click an image to begin!\",\n    score: 0,\n    highscore: 0,\n    unselectedFriends: friends\n  };\n\n\n  //Below needs to be the click function that records click\n componentDidMount(){\n\n }\n\n shuffleArray = array => {\n   for (let i = array.length -1; i > 0;i--) {\n     let j = Math.floor(Math.random() * (i + 1));\n     [array[i], array[j] = [array]]\n   }\n }\n\n\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <Wrapper>\n        <Navbar \n          message={this.state.message}\n          score={this.state.score}\n          highscore={this.state.highscore}\n          />\n        <Title />\n        {this.state.friends.map(friend => (\n          <FriendCard\n            clickCount={this.clickCount}\n            id={friend.id}\n            key={friend.id}\n            image={friend.image}\n          // location={friend.location}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
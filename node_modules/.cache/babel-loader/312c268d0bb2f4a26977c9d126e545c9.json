{"ast":null,"code":"import _classCallCheck from \"/Users/admin/Desktop/code/clicky-game/clicky-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/admin/Desktop/code/clicky-game/clicky-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/admin/Desktop/code/clicky-game/clicky-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/admin/Desktop/code/clicky-game/clicky-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/admin/Desktop/code/clicky-game/clicky-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/admin/Desktop/code/clicky-game/clicky-app/src/App.js\";\nimport React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\nimport \"./index.css\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      friends: friends,\n      score: 0,\n      highscore: 0\n    };\n\n    _this.gameOver = function () {\n      if (_this.state.score > _this.state.highscore) {\n        _this.setState({\n          highscore: _this.state.score\n        }, function () {\n          console.log(this.state.highscore);\n        });\n      }\n\n      _this.state.friends.forEach(function (friend) {\n        FriendCard.count = 0;\n      });\n\n      alert(\"Game Over :( /nscore: \".concat(_this.state.score));\n\n      _this.setState({\n        score: 0\n      });\n\n      return true;\n    };\n\n    _this.clickCount = function (id) {\n      _this.state.friends.find(function (o, i) {\n        if (o.id === id) {\n          if (friends[i].count === 0) {\n            friends[i].count = friends[i].count + 1;\n\n            _this.setState({\n              score: _this.state.score + 1\n            }, function () {\n              console.log(this.state.score);\n            });\n\n            _this.state.friends.sort(function () {\n              return Math.random() - 0.5;\n            });\n\n            return true;\n          } else {\n            _this.gameOver();\n          }\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    // Map over this.state.friends and render a FriendCard component for each friend object\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Wrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"The Clicky Game\"), this.state.friends.map(function (friend) {\n        return React.createElement(FriendCard, {\n          clickCount: _this2.clickCount,\n          id: friend.id,\n          key: friend.id,\n          image: friend.image // location={friend.location}\n          ,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        });\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/admin/Desktop/code/clicky-game/clicky-app/src/App.js"],"names":["React","Component","FriendCard","Wrapper","Title","friends","App","state","score","highscore","gameOver","setState","console","log","forEach","friend","count","alert","clickCount","id","find","o","i","sort","Math","random","map","image"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAO,aAAP;;IAEMC,G;;;;;;;;;;;;;;;;;UAEJC,K,GAAQ;AACNF,MAAAA,OAAO,EAAPA,OADM;AAENG,MAAAA,KAAK,EAAE,CAFD;AAGNC,MAAAA,SAAS,EAAE;AAHL,K;;UAMRC,Q,GAAW,YAAM;AACf,UAAI,MAAKH,KAAL,CAAWC,KAAX,GAAmB,MAAKD,KAAL,CAAWE,SAAlC,EAA6C;AAC3C,cAAKE,QAAL,CAAc;AAAEF,UAAAA,SAAS,EAAE,MAAKF,KAAL,CAAWC;AAAxB,SAAd,EAA+C,YAAY;AACzDI,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAL,CAAWE,SAAvB;AACD,SAFD;AAGD;;AACD,YAAKF,KAAL,CAAWF,OAAX,CAAmBS,OAAnB,CAA2B,UAAAC,MAAM,EAAI;AACnCb,QAAAA,UAAU,CAACc,KAAX,GAAmB,CAAnB;AACD,OAFD;;AAGAC,MAAAA,KAAK,iCAA0B,MAAKV,KAAL,CAAWC,KAArC,EAAL;;AACA,YAAKG,QAAL,CAAc;AAAEH,QAAAA,KAAK,EAAE;AAAT,OAAd;;AACA,aAAO,IAAP;AACD,K;;UAGDU,U,GAAa,UAAAC,EAAE,EAAI;AACjB,YAAKZ,KAAL,CAAWF,OAAX,CAAmBe,IAAnB,CAAwB,UAACC,CAAD,EAAIC,CAAJ,EAAU;AAChC,YAAID,CAAC,CAACF,EAAF,KAASA,EAAb,EAAiB;AACf,cAAId,OAAO,CAACiB,CAAD,CAAP,CAAWN,KAAX,KAAqB,CAAzB,EAA4B;AAC1BX,YAAAA,OAAO,CAACiB,CAAD,CAAP,CAAWN,KAAX,GAAmBX,OAAO,CAACiB,CAAD,CAAP,CAAWN,KAAX,GAAmB,CAAtC;;AACA,kBAAKL,QAAL,CAAc;AAAEH,cAAAA,KAAK,EAAE,MAAKD,KAAL,CAAWC,KAAX,GAAmB;AAA5B,aAAd,EAA+C,YAAY;AACzDI,cAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAL,CAAWC,KAAvB;AACD,aAFD;;AAGA,kBAAKD,KAAL,CAAWF,OAAX,CAAmBkB,IAAnB,CAAwB;AAAA,qBAAMC,IAAI,CAACC,MAAL,KAAgB,GAAtB;AAAA,aAAxB;;AACA,mBAAO,IAAP;AACD,WAPD,MAOO;AACL,kBAAKf,QAAL;AACD;AACF;AAEF,OAdD;AAeD,K;;;;;;;AAID;6BACS;AAAA;;AACP,aACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAEG,KAAKH,KAAL,CAAWF,OAAX,CAAmBqB,GAAnB,CAAuB,UAAAX,MAAM;AAAA,eAC5B,oBAAC,UAAD;AACE,UAAA,UAAU,EAAE,MAAI,CAACG,UADnB;AAEE,UAAA,EAAE,EAAEH,MAAM,CAACI,EAFb;AAGE,UAAA,GAAG,EAAEJ,MAAM,CAACI,EAHd;AAIE,UAAA,KAAK,EAAEJ,MAAM,CAACY,KAJhB,CAKA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAD4B;AAAA,OAA7B,CAFH,CADF;AAcD;;;;EA3De1B,S;;AA8DlB,eAAeK,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\nimport \"./index.css\";\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends,\n    score: 0,\n    highscore: 0\n  };\n\n  gameOver = () => {\n    if (this.state.score > this.state.highscore) {\n      this.setState({ highscore: this.state.score }, function () {\n        console.log(this.state.highscore);\n      });\n    }\n    this.state.friends.forEach(friend => {\n      FriendCard.count = 0;\n    });\n    alert(`Game Over :( /nscore: ${this.state.score}`);\n    this.setState({ score: 0 });\n    return true;\n  };\n\n  //Below needs to be the click function that records click\n  clickCount = id => {\n    this.state.friends.find((o, i) => {\n      if (o.id === id) {\n        if (friends[i].count === 0) {\n          friends[i].count = friends[i].count + 1;\n          this.setState({ score: this.state.score + 1 }, function () {\n            console.log(this.state.score);\n          });\n          this.state.friends.sort(() => Math.random() - 0.5);\n          return true;\n        } else {\n          this.gameOver();\n        }\n      }\n\n    })\n  };\n\n\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <Wrapper>\n        <Title>The Clicky Game</Title>\n        {this.state.friends.map(friend => (\n          <FriendCard\n            clickCount={this.clickCount}\n            id={friend.id}\n            key={friend.id}\n            image={friend.image}\n          // location={friend.location}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
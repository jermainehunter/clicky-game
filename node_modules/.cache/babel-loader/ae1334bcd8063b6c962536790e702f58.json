{"ast":null,"code":"import _classCallCheck from \"/Users/admin/Desktop/code/clicky-game/clicky-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/admin/Desktop/code/clicky-game/clicky-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/admin/Desktop/code/clicky-game/clicky-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/admin/Desktop/code/clicky-game/clicky-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/admin/Desktop/code/clicky-game/clicky-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/admin/Desktop/code/clicky-game/clicky-app/src/App.js\";\nimport React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport Navbar from \"./components/Navbar\";\nimport friends from \"./friends.json\";\nimport \"./index.css\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      friends: friends,\n      score: 0,\n      highscore: 0,\n      unselectedFriends: friends,\n      rightWrong: \"\"\n    };\n\n    _this.shuffleArray = function (array) {\n      for (var i = array.length - 1; i > 0; i--) {\n        var j = Math.floor(Math.random() * (i + 1));\n        var _ref = [array[j], array[i]];\n        array[i] = _ref[0];\n        array[j] = _ref[1];\n      }\n    };\n\n    _this.selectFriend = function (name) {\n      var findFriend = _this.state.unselectedFriends.find(function (item) {\n        return item.name === name;\n      });\n\n      if (findFriend === undefined) {\n        _this.setState({\n          message: \"You guessed incorrectly!\",\n          highscore: _this.state.score > _this.state.highscore ? _this.state.score : _this.state.highscore,\n          score: 0,\n          friends: friends,\n          unselectedFriends: friends\n        });\n      } else {\n        var newFriend = _this.state.unselectedFriends.filter(function (item) {\n          return item.name !== name;\n        });\n\n        _this.setState({\n          message: \"You guessed correctly!\",\n          score: _this.state.score + 1,\n          friends: friends,\n          unselectedFriends: newFriend\n        });\n      }\n\n      _this.shuffleArray(friends);\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    // Map over this.state.friends and render a FriendCard component for each friend object\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Wrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        message: this.state.message,\n        score: this.state.score,\n        highscore: this.state.highscore,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), React.createElement(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), this.state.friends.map(function (friend) {\n        return React.createElement(FriendCard, {\n          clickCount: _this2.clickCount,\n          id: friend.id,\n          key: friend.id,\n          image: friend.image // location={friend.location}\n          ,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        });\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/admin/Desktop/code/clicky-game/clicky-app/src/App.js"],"names":["React","Component","FriendCard","Wrapper","Title","Navbar","friends","App","state","score","highscore","unselectedFriends","rightWrong","shuffleArray","array","i","length","j","Math","floor","random","selectFriend","name","findFriend","find","item","undefined","setState","message","newFriend","filter","map","friend","clickCount","id","image"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport Navbar from \"./components/Navbar\";\nimport friends from \"./friends.json\";\nimport \"./index.css\";\n\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends,\n    score: 0,\n    highscore: 0,\n    unselectedFriends: friends,\n    rightWrong: \"\"\n  };\n\n\n  //Below needs to be the click function that records click\n shuffleArray = array => {\n   for (let i = array.length -1; i > 0;i--) {\n     let j = Math.floor(Math.random() * (i + 1));\n     [array[i], array[j]] = [array[j], array[i]];\n   }\n }\n\n selectFriend = name => {\n   const findFriend = this.state.unselectedFriends.find(item => item.name === name);\n   if (findFriend === undefined) {\n     this.setState({\n       message: \"You guessed incorrectly!\",\n       highscore: (this.state.score > this.state.highscore) ? this.state.score : this.state.highscore,\n       score: 0,\n       friends,\n       unselectedFriends: friends\n     });\n   }\n   else {\n     const newFriend = this.state.unselectedFriends.filter(item => item.name !== name);\n     this.setState({\n       message: \"You guessed correctly!\",\n       score: this.state.score + 1,\n       friends: friends,\n       unselectedFriends: newFriend\n     });\n   }\n   this.shuffleArray(friends);\n }\n\n\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <Wrapper>\n        <Navbar \n          message={this.state.message}\n          score={this.state.score}\n          highscore={this.state.highscore}\n          />\n        <Title />\n        {this.state.friends.map(friend => (\n          <FriendCard\n            clickCount={this.clickCount}\n            id={friend.id}\n            key={friend.id}\n            image={friend.image}\n          // location={friend.location}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}